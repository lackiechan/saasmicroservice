<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cloud-framework</artifactId>
        <groupId>com.tenlnet</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>base-monitor</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tenlnet</groupId>
            <artifactId>cloud-common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.1.1</version>
                <!--docker镜像相关的配置信息-->
                <configuration>
                    <!--镜像名，要带上私有服务器IP和端口-->
                    <imageName>${docker.image.hostprefix}/${docker.image.prefix}/${project.artifactId}</imageName>
                    <!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
                    <!--TAG,这里用工程版本号-->
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <!--镜像的FROM，使用java官方镜像-->
                    <baseImage>java:8u111-jdk</baseImage>
                    <!--该镜像的容器启动后，直接运行spring boot工程-->
                    <entryPoint>["java", "-Xmx500m", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <!--<dockerDirectory>src/main/docker</dockerDirectory>-->
                    <!--构建镜像的配置信息-->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <registryUrl>${docker.image.hostprefix}</registryUrl>
                    <pushImage>true</pushImage>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>com.google.cloud.tools</groupId>-->
                <!--<artifactId>jib-maven-plugin</artifactId>-->
                <!--<version>1.5.1</version>-->
                <!--<configuration>-->
                    <!--<from>-->

                        <!--<image>${docker.image.host}/${docker.registry.name}/${project.artifactId}</image>-->
                        <!--<auth>-->
                            <!--<username>admin</username>-->
                            <!--<password>harbor12345</password>-->
                        <!--</auth>-->
                    <!--</from>-->
                    <!--<to>-->
                        <!--<image>${docker.image.host}/${docker.registry.name}/${project.artifactId}</image>-->
                        <!--<auth>-->
                            <!--<username>admin</username>-->
                            <!--<password>harbor12345</password>-->
                        <!--</auth>-->
                    <!--</to>-->
                    <!--<container>-->
                        <!--<mainClass>MonitorApplication</mainClass>-->
                    <!--</container>-->
                    <!--<allowInsecureRegistries>false</allowInsecureRegistries>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>